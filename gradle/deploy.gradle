apply plugin: 'maven-publish'
apply plugin: 'signing'

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.allTasks.any { it instanceof Sign } && project.ext.isReleaseVersion) {
        def id = System.getenv('GPG_ID')
        def file = '/home/travis/.gnupg/secring.gpg'
        def password = System.getenv('GPG_PASSWORD')

        allprojects { ext."signing.keyId" = id }
        allprojects { ext."signing.secretKeyRingFile" = file }
        allprojects { ext."signing.password" = password }
    }
}

ext {
    isReleaseVersion = !(project.version =~ /-SNAPSHOT$/)
    isNeedSign = System.getenv('GPG_ID') && isReleaseVersion
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier.set('sources')
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier.set('javadoc')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'Mask utils'
                packaging = 'jar'
                description = 'Util para ofuscar dados de objetos'
                url = 'https://github.com/eltonsandre/mask-utils'


                developers {
                    developer {
                        id = 'eltonsandre'
                        name = 'Elton Sandr√©'
                        email = 'eltonsandre@gmail.com'
                        roles {
                            role = 'owner'
                        }
                    }
                }

                scm {
                    connection 'scm:git:git://github.com/eltonsandre/mask-util.git'
                    developerConnection 'scm:git:ssh://github.com:eltonsandre/mask-util.git'
                    url 'http://github.com/eltonsandre/mask-utils/tree/master'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }

            }
        }
    }

    repositories {
        maven {
            credentials {
                username System.getenv('OSSRH_USER')
                password System.getenv('OSSRH_PASS')
            }
            if (project.ext.isReleaseVersion) {
                id ossrh
                url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            } else {
                id ossrh
                url "https://oss.sonatype.org/content/repositories/snapshots"
            }
        }
    }

    signing {
        required { project.ext.isNeedSign }
        sign publishing.publications.mavenJava
    }

    javadoc {
        if (JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html5', true)
        }
    }
}
