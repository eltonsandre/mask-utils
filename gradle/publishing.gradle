ext.'signing.keyId' = System.getenv('SIGNING_KEY_ID')
ext.'signing.password' = System.getenv('SIGNING_PASSWORD')
ext.'signing.secretKeyRingFile' = System.getenv('SIGNING_SECRET_KEY_RING_FILE')

publishing {
    publications {
        mavenJava(MavenPublication) {

            artifactId project.name
            version project.version

            from components.java

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                name = project.name
                description = this.description
                url = 'https://github.com/eltonsandre/mask-utils'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'eltonsandre'
                        name = 'Elton Sandr√©'
                        email = 'eltonsandre@gmail.com'
                        organization {
                            name = 'eltonsandre'
                            url = 'https://github.com/eltonsandre'
                        }
                    }
                }

                scm {
                    connection = 'scm:git:git://github.com/eltonsandre/mask-util.git'
                    developerConnection = 'scm:git:ssh://github.com:eltonsandre/mask-util.git'
                    url = 'http://github.com/eltonsandre/mask-utils/tree/master'
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots'

            url = version.toUpperCase().endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }

}

signing {
    sign publishing.publications.mavenJava
}
